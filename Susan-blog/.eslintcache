[{"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/index.js":"1","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/App.js":"2","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/Navbar.js":"3","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/Home.js":"4","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/BlogList.js":"5","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/useFetch.js":"6","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/Create.js":"7","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/BlogDetails.js":"8"},{"size":543,"mtime":1612275386000,"results":"9","hashOfConfig":"10"},{"size":1146,"mtime":1612522289000,"results":"11","hashOfConfig":"10"},{"size":538,"mtime":1612520872000,"results":"12","hashOfConfig":"10"},{"size":920,"mtime":1612518930000,"results":"13","hashOfConfig":"10"},{"size":486,"mtime":1612523503000,"results":"14","hashOfConfig":"10"},{"size":1547,"mtime":1612521652000,"results":"15","hashOfConfig":"10"},{"size":152,"mtime":1612519756000,"results":"16","hashOfConfig":"10"},{"size":702,"mtime":1612524147000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"42ut9k",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/index.js",[],["36","37"],"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/App.js",[],"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/Navbar.js",[],"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/Home.js",[],"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/BlogList.js",[],"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/useFetch.js",["38"],"import React from 'react'\nimport './index.css';\nimport { useState, useEffect } from 'react';\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n\n    // fetching data from db.json file\n    useEffect(() => {\n        // to stop and abort the fetch thats happening\n        const abortCont = new AbortController();\n\n        setTimeout(() => {\n            fetch(url, { signal: abortCont.signal })\n                .then(res => {\n                    if (!res.ok) { // error controle\n                        throw Error('could not fetch the data')\n                    }\n                    return res.json();\n                })\n                .then(data => {\n                    console.log(data);\n                    setData(data)\n                    setIsPending(false) // end \"loading\" div\n                    setError(null);\n                })\n                .catch(err => {\n                    if (err.name === 'AbortError') {\n                        console.log('fetch aborted')\n                    } else {\n                        setIsPending(false);\n                        setError(err.message)// catching errors and updating the state\n                    }\n                })\n        }, 1000);\n\n        // to clean up errors that occur when you change between components back and forth to quickly\n        return () => abortCont.abort();\n\n    }, [url]);\n\n    return { data, isPending, error }\n}\n\n\n\nexport default useFetch","/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/Create.js",[],"/Users/susankuijpers/Desktop/workspace/WebDevSep/dojo-blog/src/BlogDetails.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":13},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]